parent.0 = ../gp/koza/koza.params

#define type
gp.type.a.size = 1
gp.type.a.0.name = boolean
gp.tc.0.returns = boolean

# define node contraints

gp.nc.size = 2

gp.nc.0 = ec.gp.GPNodeConstraints
gp.nc.0.name = nc0
gp.nc.0.returns = boolean
gp.nc.0.size = 0

gp.nc.1 = ec.gp.GPNodeConstraints
gp.nc.1.name = nc1
gp.nc.1.returns = boolean
gp.nc.1.size = 2
gp.nc.1.child.0 = boolean
gp.nc.1.child.1 = boolean

# We have one function set, of class GPFunctionSet
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
gp.fs.0.name = f0


#Terminals
gp.fs.0.size = 15

#standar functions
gp.fs.0.func.0 = ec.app.func.And
gp.fs.0.func.0.nc = nc1
gp.fs.0.func.1 = ec.app.func.Nand
gp.fs.0.func.1.nc = nc1
gp.fs.0.func.2 = ec.app.func.Nor
gp.fs.0.func.2.nc = nc1
gp.fs.0.func.3 = ec.app.func.Or
gp.fs.0.func.3.nc = nc1
gp.fs.0.func.4 = ec.app.func.D0
gp.fs.0.func.4.nc = nc0
gp.fs.0.func.5 = ec.app.func.D1
gp.fs.0.func.5.nc = nc0
gp.fs.0.func.6 = ec.app.func.D2
gp.fs.0.func.6.nc = nc0
gp.fs.0.func.7 = ec.app.func.D3
gp.fs.0.func.7.nc = nc0
gp.fs.0.func.8 = ec.app.func.D4
gp.fs.0.func.8.nc = nc0
gp.fs.0.func.9 = ec.app.func.D5
gp.fs.0.func.9.nc = nc0
gp.fs.0.func.10 = ec.app.func.D6
gp.fs.0.func.10.nc = nc0
gp.fs.0.func.11 = ec.app.func.D7
gp.fs.0.func.11.nc = nc0
gp.fs.0.func.12 = ec.app.func.A0
gp.fs.0.func.12.nc = nc0
gp.fs.0.func.13 = ec.app.func.A1
gp.fs.0.func.13.nc = nc0
gp.fs.0.func.14 = ec.app.func.A2
gp.fs.0.func.14.nc = nc0

stat.file = stat/testing/best.stat
stat.num-children = 1
stat.child.0 = ec.gp.koza.KozaShortStatistics
stat.child.0.file = stat/testing/gen.stat
stat.child.0.do-subpops = true

eval.problem = ec.app.MultiplexerProblem
eval.problem.data = ec.app.BooleanData

eval.problem.samplesize = 20

eval.problem.islands = 4

select.tournament.size = 4

generations = 200

breed.elite.0=1

gp.koza.mutate.prob = 0.2

gp.koza.xover.prob = 0.8
gp.koza.xover.tries = 5

silent = true

evalthreads = 6
breedthreads = 6
seed.0 = time
seed.1 = time
seed.2 = time
seed.3 = time
seed.4 = time
seed.5 = time

jobs = 3



# EXCHANGER
exch = ec.exchange.InterPopulationExchange
exch.select = ec.select.TournamentSelection
exch.select-to-die = ec.select.RandomSelection

# Number to send
exch.size = 5

# generation to begin at
exch.start = 1

#interval
exch.mod = 8

#fuck
exch.subpop.0.num-dest = 1
exch.subpop.0.dest.0 = 1

exch.subpop.1.num-dest = 1
exch.subpop.1.dest.0 = 2

exch.subpop.2.num-dest = 1
exch.subpop.2.dest.0 = 3

exch.subpop.3.num-dest = 1
exch.subpop.3.dest.0 = 0


#POPULATION

pop.subpops = 4
pop.default-subpop = 0

pop.subpop.0.size = 50
pop.subpop.0.species.pipe.tries = 5
pop.subpop.0.species.pipe.maxdepth = 17
pop.subpop.0.species.pipe.toss = false
